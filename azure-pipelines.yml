# Build Pipeline
pool:
  # What environment will the build agent run on? (Windows / Linux / macOS)
  vmImage: "vs2017-win2016"

variables:
  psmversion: 4.0.$(Build.Buildid)

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - /LICENSE
    - /README.md
    - Demo/*
    - Documentation/*
    - Examples/*

steps:
  # Build Tasks
  - powershell: |
      .\Build\build.ps1 -ResolveDependency -TaskList 'Init'
    displayName: "Install Dependencies"

  - powershell: |
      .\Build\build.ps1 -TaskList 'CombineFunctionsAndStage'
    displayName: "Combine PowerShell functions into single module file"

  - powershell: |
      .\Build\build.ps1 -TaskList 'Analyze'
    displayName: "Analyze"

  - powershell: |
      .\Build\build.ps1 -TaskList 'Test'
    displayName: "Test"
    env:
      StatusCake_API_Key: $(SCAPIKEY)
      StatusCake_Username: $(SCUSERNAME)

  - powershell: |
      .\Build\build.ps1 -TaskList 'UpdateDocumentation'
    displayName: "Update Documentation"

  - powershell: |
      .\Build\build.ps1 -TaskList 'CreateBuildArtifact'
    displayName: "Create Build Artifact"


  # Publish Tasks
  - task: PublishTestResults@2
    displayName: "Publish Pester Tests"
    inputs:
      testRunner: "NUnit"
      searchFolder: "Artifacts"
      testRunTitle: "PesterTests-Win2016"
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: PowerShell Module Zipped for offline use"
    inputs:
      PathtoPublish: Artifacts
      ArtifactName: Artifacts
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: PowerShell Module"
    inputs:
      PathtoPublish: Staging
      ArtifactName: PSModule
    condition: always()

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.4.0'
    inputs:
      versionSpec: 5.4.0

  - task: NuGetAuthenticate@0
    displayName: 'NuGet Authenticate'

  - task: PowerShell@2
    displayName: 'Publish Module to Powershell Gallery'
    inputs:
      targetType: filePath
      filePath: './Build/Publish-PSGallery.ps1'
      arguments: '-NuGetAPIKey $env:PSGalleryAPIKey'
    env:
      PSGalleryAPIKey: $(PSGALLERY_API_KEY)
      ModuleChildPath: Staging\StatusCake-Helpers

  # To publish to Azure Devops Artifact Feed
  #- task: PowerShell@2
  #  displayName: 'Publish Module to Azure DevOps Artifact Feed'
  #  inputs:
  #    targetType: filePath
  #    filePath: './Build/Publish-AzDOArtifactFeed.ps1'
  #    arguments: '-AzDOAccountName $env:AzDOAccountName -AzDOArtifactFeedName $env:AzDOArtifactFeedName -AzDOPat $env:AzureDevOps_PAT'
  #  env:
  #    AzDOAccountName: oliverli0875
  #    AzDOArtifactFeedName: prod-helpers
  #    AzureDevOps_PAT: $(AZDOPAT)
  #    ModuleChildPath: Staging\StatusCake-Helpers
